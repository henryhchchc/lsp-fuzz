use serde::{Deserialize, Serialize};

use crate::macros::lsp_messages;

lsp_messages! {
    /// A Language Server Protocol message.
    #[derive(Debug, Clone, PartialEq, Eq, Hash, Serialize, Deserialize)]
    #[allow(clippy::large_enum_variant, reason = "By LSP spec")]
    pub enum Message {
        request::Initialize,
        request::Shutdown,
        request::ShowMessageRequest,
        request::RegisterCapability,
        request::UnregisterCapability,
        request::WorkspaceSymbolRequest,
        request::WorkspaceSymbolResolve,
        request::ExecuteCommand,
        request::WillSaveWaitUntil,
        request::Completion,
        request::ResolveCompletionItem,
        request::HoverRequest,
        request::SignatureHelpRequest,
        request::GotoDeclaration,
        request::GotoDefinition,
        request::References,
        request::DocumentHighlightRequest,
        request::DocumentSymbolRequest,
        request::CodeActionRequest,
        request::CodeLensRequest,
        request::CodeLensResolve,
        request::DocumentLinkRequest,
        request::DocumentLinkResolve,
        request::ApplyWorkspaceEdit,
        request::RangeFormatting,
        request::OnTypeFormatting,
        request::Formatting,
        request::Rename,
        request::DocumentColor,
        request::ColorPresentationRequest,
        request::FoldingRangeRequest,
        request::PrepareRenameRequest,
        request::GotoImplementation,
        request::GotoTypeDefinition,
        request::SelectionRangeRequest,
        request::WorkspaceFoldersRequest,
        request::WorkspaceConfiguration,
        request::WorkDoneProgressCreate,
        request::CallHierarchyIncomingCalls,
        request::CallHierarchyOutgoingCalls,
        request::MonikerRequest,
        request::LinkedEditingRange,
        request::CallHierarchyPrepare,
        request::TypeHierarchyPrepare,
        request::SemanticTokensFullRequest,
        request::SemanticTokensFullDeltaRequest,
        request::SemanticTokensRangeRequest,
        request::InlayHintRequest,
        request::InlineValueRequest,
        request::DocumentDiagnosticRequest,
        request::WorkspaceDiagnosticRequest,
        request::WorkspaceDiagnosticRefresh,
        request::TypeHierarchySupertypes,
        request::TypeHierarchySubtypes,
        request::WillCreateFiles,
        request::WillRenameFiles,
        request::WillDeleteFiles,
        request::SemanticTokensRefresh,
        request::CodeLensRefresh,
        request::InlayHintRefreshRequest,
        request::InlineValueRefreshRequest,
        request::CodeActionResolveRequest,
        request::InlayHintResolveRequest,
        request::ShowDocument,
        notification::Cancel,
        notification::SetTrace,
        notification::LogTrace,
        notification::Initialized,
        notification::Exit,
        notification::ShowMessage,
        notification::LogMessage,
        notification::WorkDoneProgressCancel,
        notification::TelemetryEvent,
        notification::DidOpenTextDocument,
        notification::DidChangeTextDocument,
        notification::WillSaveTextDocument,
        notification::DidSaveTextDocument,
        notification::DidCloseTextDocument,
        notification::PublishDiagnostics,
        notification::DidOpenNotebookDocument,
        notification::DidChangeNotebookDocument,
        notification::DidSaveNotebookDocument,
        notification::DidCloseNotebookDocument,
        notification::DidChangeConfiguration,
        notification::DidChangeWatchedFiles,
        notification::DidChangeWorkspaceFolders,
        notification::Progress,
        notification::DidCreateFiles,
        notification::DidRenameFiles,
        notification::DidDeleteFiles
    }
}
